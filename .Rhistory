geom_errorbar(aes(ymin = Estimate - SE, ymax = Estimate + SE), width = 0.3) +
geom_point() +
labs(x = '', y = 'Mean change in probability of persisting over Abx recovery') +
coord_flip() +
th
j <- x %>%
filter(!is.na(Pair)) %>%
group_by(Pair, otu) %>%
mutate(Control_abun = sum(abun[Abx == 'N']) / length(unique(Hour))) %>%
filter(Abx == 'Y') %>%
group_by(Mouse, otu, Control_abun) %>%
filter(abun[Hour == 120] > 0) %>%
summarise(abx_response = ifelse(abun[Hour == max(Hour)] > 0, 1, 0)) %>%
ungroup() %>%
left_join(traits_wide_scaled, by = 'otu') %>%
mutate(control_abun = scale(Control_abun)) %>%
select(-Mouse, -otu)
m <- lm(abx_response ~ ., data = j)
tmp <- summary(m)$coef %>%
as.data.frame() %>%
do(data.frame(var = row.names(.), .)) %>%
rename(SE = Std..Error, p.value = Pr...t..) %>%
filter(var != "(Intercept)") %>%
mutate(var = factor(var, unique(var[order(Estimate)])))
ggplot(tmp, aes(x = var, y = Estimate, color = p.value < 0.05)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = Estimate - SE, ymax = Estimate + SE), width = 0.3) +
geom_point() +
labs(x = '', y = 'Mean change in probability of persisting over Abx recovery') +
coord_flip() +
th
j <- x %>%
filter(!is.na(Pair)) %>%
group_by(Pair, otu) %>%
mutate(Control_abun = sum(abun[Abx == 'N']) / length(unique(Hour))) %>%
filter(Abx == 'Y') %>%
group_by(Mouse, otu, Control_abun) %>%
filter(abun[Hour == 120] > 0) %>%
summarise(delta_rel_abun = abun[Hour == 120] - abun[Hour == max(Hour)]) %>%
ungroup() %>%
left_join(traits_wide_scaled, by = 'otu') %>%
mutate(Control_abun = scale(Control_abun)) %>%
select(-Mouse, -otu)
tmp <- summary(m)$coef %>%
as.data.frame() %>%
do(data.frame(var = row.names(.), .)) %>%
rename(SE = Std..Error, p.value = Pr...t..) %>%
filter(var != "(Intercept)") %>%
mutate(var = factor(var, unique(var[order(t.value)])))
ggplot(tmp, aes(x = var, y = Estimate, color = p.value < 0.05)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = Estimate - SE, ymax = Estimate + SE), width = 0.3) +
geom_point() +
labs(y = 'Mean Change in rel. abun. over Abx recovery', x = '') +
coord_flip() +
th
j <- x %>%
filter(!is.na(Pair)) %>%
group_by(Pair, otu) %>%
mutate(Control_abun = sum(abun[Abx == 'N']) / length(unique(Hour))) %>%
filter(Abx == 'Y') %>%
group_by(Mouse, otu, Control_abun) %>%
filter(abun[Hour == 120] > 0) %>%
summarise(delta_rel_abun = abun[Hour == 120] - abun[Hour == max(Hour)]) %>%
ungroup() %>%
left_join(traits_wide_scaled, by = 'otu') %>%
mutate(Control_abun = scale(Control_abun)) %>%
select(-Mouse, -otu)
tmp <- summary(m)$coef %>%
as.data.frame() %>%
do(data.frame(var = row.names(.), .)) %>%
rename(SE = Std..Error, p.value = Pr...t..) %>%
filter(var != "(Intercept)") %>%
mutate(var = factor(var, unique(var[order(Estimate)])))
ggplot(tmp, aes(x = var, y = Estimate, color = p.value < 0.05)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = Estimate - SE, ymax = Estimate + SE), width = 0.3) +
geom_point() +
labs(y = 'Mean Change in rel. abun. over Abx recovery', x = '') +
coord_flip() +
th
tmp
j <- x %>%
filter(!is.na(Pair)) %>%
group_by(Pair, otu) %>%
mutate(Control_abun = sum(abun[Abx == 'N']) / length(unique(Hour))) %>%
filter(Abx == 'Y') %>%
group_by(Mouse, otu, Control_abun) %>%
filter(abun[Hour == 120] > 0) %>%
summarise(delta_rel_abun = abun[Hour == 120] - abun[Hour == max(Hour)]) %>%
ungroup() %>%
left_join(traits_wide_scaled, by = 'otu') %>%
mutate(Control_abun = scale(Control_abun)) %>%
select(-Mouse, -otu)
m <- lm(abx_response ~ ., data = j)
tmp <- summary(m)$coef %>%
as.data.frame() %>%
do(data.frame(var = row.names(.), .)) %>%
rename(SE = Std..Error, p.value = Pr...t..) %>%
filter(var != "(Intercept)") %>%
mutate(var = factor(var, unique(var[order(Estimate)])))
ggplot(tmp, aes(x = var, y = Estimate, color = p.value < 0.05)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = Estimate - SE, ymax = Estimate + SE), width = 0.3) +
geom_point() +
labs(y = 'Mean Change in rel. abun. over Abx recovery', x = '') +
coord_flip() +
th
j <- x %>%
filter(!is.na(Pair)) %>%
group_by(Pair, otu) %>%
mutate(Control_abun = sum(abun[Abx == 'N']) / length(unique(Hour))) %>%
filter(Abx == 'Y') %>%
group_by(Mouse, otu, Control_abun) %>%
filter(abun[Hour == 120] > 0) %>%
summarise(delta_rel_abun = abun[Hour == 120] - abun[Hour == max(Hour)]) %>%
ungroup() %>%
left_join(traits_wide_scaled, by = 'otu') %>%
mutate(Control_abun = scale(Control_abun)) %>%
select(-Mouse, -otu)
m <- lm(delta_rel_abun ~ ., data = j)
tmp <- summary(m)$coef %>%
as.data.frame() %>%
do(data.frame(var = row.names(.), .)) %>%
rename(SE = Std..Error, p.value = Pr...t..) %>%
filter(var != "(Intercept)") %>%
mutate(var = factor(var, unique(var[order(Estimate)])))
ggplot(tmp, aes(x = var, y = Estimate, color = p.value < 0.05)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = Estimate - SE, ymax = Estimate + SE), width = 0.3) +
geom_point() +
labs(y = 'Mean Change in rel. abun. over Abx recovery', x = '') +
coord_flip() +
th
j <- x %>%
filter(!is.na(Pair)) %>%
group_by(Pair, otu) %>%
mutate(Control_abun = sum(abun[Abx == 'N']) / length(unique(Hour))) %>%
filter(sum(abun[Abx == 'Y' & Hour <= 120]) == 0 |
sum(abun[Abx == 'N' & Hour <= 120]) > 0) %>%
filter(Abx == 'Y') %>%
group_by(Mouse, otu, Control_abun) %>%
summarise(
immigrant_status = ifelse(sum(abun[Hour > 120]) > 0, 1, 0),
ETA = min(Hour[abun > 0 & Hour > 120]) - 120
)
head(j)
j <- x %>%
filter(!is.na(Pair)) %>%
group_by(Pair, otu) %>%
mutate(Control_abun = sum(abun[Abx == 'N']) / length(unique(Hour))) %>%
filter(sum(abun[Abx == 'Y' & Hour <= 120]) == 0 |
sum(abun[Abx == 'N' & Hour <= 120]) > 0) %>%
filter(Abx == 'Y') %>%
group_by(Mouse, otu, Control_abun) %>%
summarise(
immigrant_status = ifelse(sum(abun[Hour > 120]) > 0, 1, 0),
ETA = min(Hour[abun > 0 & Hour > 120]) - 120
) %>%
ungroup() %>%
left_join(traits_wide_scaled, by = 'otu') %>%
mutate(Control_abun = scale(Control_abun)) %>%
select(-Mouse, -otu)
warnings()
immigrant_status = ifelse(sum(abun[Hour > 120]) > 0, 1, 0),
ETA = ifelse(immigrant_status == 1, min(Hour[abun > 0 & Hour > 120]) - 120, Inf)) %>%
ungroup() %>%
left_join(traits_wide_scaled, by = 'otu') %>%
mutate(Control_abun = scale(Control_abun)) %>%
select(-Mouse, -otu)
j <- x %>%
filter(!is.na(Pair)) %>%
group_by(Pair, otu) %>%
mutate(Control_abun = sum(abun[Abx == 'N']) / length(unique(Hour))) %>%
filter(sum(abun[Abx == 'Y' & Hour <= 120]) == 0 |
sum(abun[Abx == 'N' & Hour <= 120]) > 0) %>%
filter(Abx == 'Y') %>%
group_by(Mouse, otu, Control_abun) %>%
summarise(
immigrant_status = ifelse(sum(abun[Hour > 120]) > 0, 1, 0),
ETA = ifelse(immigrant_status == 1, min(Hour[abun > 0 & Hour > 120]) - 120, Inf)) %>%
ungroup() %>%
left_join(traits_wide_scaled, by = 'otu') %>%
mutate(Control_abun = scale(Control_abun)) %>%
select(-Mouse, -otu)
names(j)
j <- x %>%
filter(!is.na(Pair)) %>%
group_by(Pair, otu) %>%
mutate(Control_abun = sum(abun[Abx == 'N']) / length(unique(Hour))) %>%
filter(sum(abun[Abx == 'Y' & Hour <= 120]) == 0 |
sum(abun[Abx == 'N' & Hour <= 120]) > 0) %>%
filter(Abx == 'Y') %>%
group_by(Mouse, otu, Control_abun) %>%
summarise(
immigrant_status = ifelse(sum(abun[Hour > 120]) > 0, 1, 0),
ETA = ifelse(immigrant_status == 1, min(Hour[abun > 0 & Hour > 120]) - 120, Inf)) %>%
ungroup() %>%
left_join(traits_wide_scaled, by = 'otu') %>%
mutate(Control_abun = scale(Control_abun)) %>%
select(-Mouse, -otu)
m <- lm(immigrant_status ~ ., data = select(j, -ETA))
tmp <- summary(m)$coef %>%
as.data.frame() %>%
do(data.frame(var = row.names(.), .)) %>%
rename(SE = Std..Error, p.value = Pr...t..) %>%
filter(var != "(Intercept)") %>%
mutate(var = factor(var, unique(var[order(Estimate)])))
ggplot(tmp, aes(x = var, y = Estimate, color = p.value < 0.05)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = Estimate - SE, ymax = Estimate + SE), width = 0.3) +
geom_point() +
labs(x = '', y = 'Mean change in probability of immigrating during Abx recovery') +
coord_flip() +
th
j <- x %>%
filter(!is.na(Pair)) %>%
group_by(Pair, otu) %>%
mutate(Control_abun = sum(abun[Abx == 'N']) / length(unique(Hour))) %>%
filter(sum(abun[Abx == 'Y' & Hour <= 120]) == 0 |
sum(abun[Abx == 'N' & Hour <= 120]) > 0) %>%
filter(Abx == 'Y') %>%
group_by(Mouse, otu, Control_abun) %>%
summarise(immigrant_status = ifelse(sum(abun[Hour > 120]) > 0, 1, 0)) %>%
ungroup() %>%
left_join(traits_wide_scaled, by = 'otu') %>%
mutate(Control_abun = scale(Control_abun)) %>%
select(-Mouse, -otu)
m <- lm(immigrant_status ~ ., data = j)
tmp <- summary(m)$coef %>%
as.data.frame() %>%
do(data.frame(var = row.names(.), .)) %>%
rename(SE = Std..Error, p.value = Pr...t..) %>%
filter(var != "(Intercept)") %>%
mutate(var = factor(var, unique(var[order(Estimate)])))
ggplot(tmp, aes(x = var, y = Estimate, color = p.value < 0.05)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = Estimate - SE, ymax = Estimate + SE), width = 0.3) +
geom_point() +
labs(x = '', y = 'Mean change in probability of immigrating during Abx recovery') +
coord_flip() +
th
j <- x %>%
filter(!is.na(Pair)) %>%
group_by(Pair, otu) %>%
mutate(Control_abun = sum(abun[Abx == 'N']) / length(unique(Hour))) %>%
filter(sum(abun[Abx == 'Y' & Hour <= 120]) == 0 |
sum(abun[Abx == 'N' & Hour <= 120]) > 0) %>%
filter(Abx == 'Y') %>%
group_by(Mouse, otu, Control_abun) %>%
filter(sum(abun[Hour > 120]) > 0) %>%
summarise(ETA = min(Hour[abun > 0 & Hour > 120]) - 120) %>%
ungroup() %>%
left_join(traits_wide_scaled, by = 'otu') %>%
mutate(Control_abun = scale(Control_abun)) %>%
select(-Mouse, -otu)
m <- lm(immigrant_status ~ ., data = j)
tmp <- summary(m)$coef %>%
as.data.frame() %>%
do(data.frame(var = row.names(.), .)) %>%
rename(SE = Std..Error, p.value = Pr...t..) %>%
filter(var != "(Intercept)") %>%
mutate(var = factor(var, unique(var[order(Estimate)])))
ggplot(tmp, aes(x = var, y = Estimate, color = p.value < 0.05)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = Estimate - SE, ymax = Estimate + SE), width = 0.3) +
geom_point() +
labs(x = '', y = 'Mean change in probability of immigrating during Abx recovery') +
coord_flip() +
th
j <- x %>%
filter(!is.na(Pair)) %>%
group_by(Pair, otu) %>%
mutate(Control_abun = sum(abun[Abx == 'N']) / length(unique(Hour))) %>%
filter(sum(abun[Abx == 'Y' & Hour <= 120]) == 0 |
sum(abun[Abx == 'N' & Hour <= 120]) > 0) %>%
filter(Abx == 'Y') %>%
group_by(Mouse, otu, Control_abun) %>%
filter(sum(abun[Hour > 120]) > 0) %>%
summarise(ETA = min(Hour[abun > 0 & Hour > 120]) - 120) %>%
ungroup() %>%
left_join(traits_wide_scaled, by = 'otu') %>%
mutate(Control_abun = scale(Control_abun)) %>%
select(-Mouse, -otu)
summary(j$ETA)
m <- lm(immigrant_status ~ ., data = j)
j <- x %>%
filter(!is.na(Pair)) %>%
group_by(Pair, otu) %>%
mutate(Control_abun = sum(abun[Abx == 'N']) / length(unique(Hour))) %>%
filter(sum(abun[Abx == 'Y' & Hour <= 120]) == 0 |
sum(abun[Abx == 'N' & Hour <= 120]) > 0) %>%
filter(Abx == 'Y') %>%
group_by(Mouse, otu, Control_abun) %>%
filter(sum(abun[Hour > 120]) > 0) %>%
summarise(ETA = -min(Hour[abun > 0 & Hour > 120]) - 120) %>%
ungroup() %>%
left_join(traits_wide_scaled, by = 'otu') %>%
mutate(Control_abun = scale(Control_abun)) %>%
select(-Mouse, -otu)
m <- lm(ETA ~ ., data = j)
tmp <- summary(m)$coef %>%
as.data.frame() %>%
do(data.frame(var = row.names(.), .)) %>%
rename(SE = Std..Error, p.value = Pr...t..) %>%
filter(var != "(Intercept)") %>%
mutate(var = factor(var, unique(var[order(Estimate)])))
ggplot(tmp, aes(x = var, y = Estimate, color = p.value < 0.05)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = Estimate - SE, ymax = Estimate + SE), width = 0.3) +
geom_point() +
labs(x = '', y = 'Mean change in probability of immigrating during Abx recovery') +
coord_flip() +
th
dim(tmp)
dim(j)
ggplot(tmp, aes(x = var, y = Estimate, color = p.value < 0.05)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = Estimate - SE, ymax = Estimate + SE), width = 0.3) +
geom_point() +
labs(x = '', y = 'Affect on number of hours before successful immigration') +
coord_flip() +
th
ggplot(tmp, aes(x = var, y = Estimate, color = p.value < 0.05)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = Estimate - SE, ymax = Estimate + SE), width = 0.3) +
geom_point() +
labs(x = '', y = 'Effect on number of hours needed before successful immigration') +
coord_flip() +
th
j <- x %>%
filter(!is.na(Pair)) %>%
group_by(Pair, otu) %>%
mutate(Control_abun = sum(abun[Abx == 'N']) / length(unique(Hour))) %>%
group_by(Mouse, otu, Control_abun) %>%
summarise(
Initial_abun = abun[Hour == 0],
End_abx_abun = abun[Hour == 120],
final_abun = abun[Hour == max(Hour)],
Persistence = ifelse(abun[Hour == 0] > 0 & abun[Hour == 120] > 0, 1, 0)) %>%
ungroup() %>%
left_join(traits_wide_scaled, by = 'otu') %>%
mutate(Control_abun = scale(Control_abun),
Initial_abun = scale(Initial_abun),
End_abx_bun = scale(End_abx_abun),
Persistence = scale(Persistence)) %>%
select(-Mouse, -otu)
m <- lm(final_abun ~ ., data = j)
tmp <- summary(m)$coef %>%
as.data.frame() %>%
do(data.frame(var = row.names(.), .)) %>%
rename(SE = Std..Error, p.value = Pr...t..) %>%
filter(var != "(Intercept)") %>%
mutate(var = factor(var, unique(var[order(Estimate)])))
ggplot(tmp, aes(x = var, y = Estimate, color = p.value < 0.05)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = Estimate - SE, ymax = Estimate + SE), width = 0.3) +
geom_point() +
labs(x = '', y = 'Predictors of post-recovery rel. abundance') +
coord_flip() +
th
head(j)
table(j$Control_abun)
summary(j$Control_abun)
plot(sort(j$Control_abun))
j <- x %>%
filter(!is.na(Pair)) %>%
group_by(Pair, otu) %>%
mutate(Control_abun = sum(abun[Abx == 'N']) / length(unique(Hour))) %>%
group_by(Mouse, otu, Control_abun) %>%
summarise(
Initial_abun = abun[Hour == 0],
End_abx_abun = abun[Hour == 120],
final_abun = abun[Hour == max(Hour)],
Persistence = ifelse(abun[Hour == 0] > 0 & abun[Hour == 120] > 0, 1, 0)) %>%
ungroup() %>%
left_join(traits_wide_scaled, by = 'otu') %>%
mutate(Control_abun = scale(Control_abun),
Initial_abun = scale(Initial_abun),
End_abx_bun = scale(End_abx_abun),
Persistence = scale(Persistence)) %>%
select(-Mouse, -otu)
summary(j$Control_abun)
mean(j$Control_abun)
sd(j$Control_abun)
j <- x %>%
filter(!is.na(Pair)) %>%
group_by(Pair, otu) %>%
mutate(Control_abun = sum(abun[Abx == 'N']) / length(unique(Hour))) %>%
mutate(Control_abun = log10(Control_abun + 1)) %>%
group_by(Mouse, otu, Control_abun) %>%
summarise(
Initial_abun = abun[Hour == 0],
End_abx_abun = abun[Hour == 120],
final_abun = abun[Hour == max(Hour)],
Persistence = ifelse(abun[Hour == 0] > 0 & abun[Hour == 120] > 0, 1, 0)) %>%
ungroup() %>%
left_join(traits_wide_scaled, by = 'otu') %>%
mutate(Control_abun = scale(Control_abun),
Initial_abun = scale(Initial_abun),
End_abx_bun = scale(End_abx_abun),
Persistence = scale(Persistence)) %>%
select(-Mouse, -otu)
summary(j$Control_abun)
plot(sort(j$Control_abun))
m <- lm(final_abun ~ ., data = j)
tmp <- summary(m)$coef %>%
as.data.frame() %>%
do(data.frame(var = row.names(.), .)) %>%
rename(SE = Std..Error, p.value = Pr...t..) %>%
filter(var != "(Intercept)") %>%
mutate(var = factor(var, unique(var[order(Estimate)])))
ggplot(tmp, aes(x = var, y = Estimate, color = p.value < 0.05)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = Estimate - SE, ymax = Estimate + SE), width = 0.3) +
geom_point() +
labs(x = '', y = 'Predictors of post-recovery rel. abundance') +
coord_flip() +
th
j <- x %>%
filter(!is.na(Pair)) %>%
group_by(Pair, otu) %>%
mutate(Control_abun = sum(abun[Abx == 'N']) / length(unique(Hour))) %>%
group_by(Mouse, otu, Control_abun) %>%
summarise(
Initial_abun = abun[Hour == 0],
End_abx_abun = abun[Hour == 120],
final_abun = abun[Hour == max(Hour)],
Persistence = ifelse(abun[Hour == 0] > 0 & abun[Hour == 120] > 0, 1, 0)) %>%
ungroup() %>%
mutate(Control_abun = scale(log10(Control_abun+1)),
Initial_abun = scale(log10(Initial_abun+1),
End_abx_bun = scale(log10(End_abx_abun+1)),
Persistence = scale(Persistence)) %>%
select(-Mouse, -otu)
m <- lm(final_abun ~ ., data = j)
tmp <- summary(m)$coef %>%
as.data.frame() %>%
do(data.frame(var = row.names(.), .)) %>%
rename(SE = Std..Error, p.value = Pr...t..) %>%
filter(var != "(Intercept)") %>%
mutate(var = factor(var, unique(var[order(Estimate)])))
ggplot(tmp, aes(x = var, y = Estimate, color = p.value < 0.05)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = Estimate - SE, ymax = Estimate + SE), width = 0.3) +
geom_point() +
labs(x = '', y = 'Predictors of post-recovery rel. abundance') +
coord_flip() +
th
j <- x %>%
filter(!is.na(Pair)) %>%
group_by(Pair, otu) %>%
mutate(Control_abun = sum(abun[Abx == 'N']) / length(unique(Hour))) %>%
group_by(Mouse, otu, Control_abun) %>%
summarise(
Initial_abun = abun[Hour == 0],
End_abx_abun = abun[Hour == 120],
final_abun = abun[Hour == max(Hour)],
Persistence = ifelse(abun[Hour == 0] > 0 & abun[Hour == 120] > 0, 1, 0)) %>%
ungroup() %>%
mutate(Control_abun = scale(log10(Control_abun+1)),
Initial_abun = scale(log10(Initial_abun+1)),
End_abx_bun = scale(log10(End_abx_abun+1)),
Persistence = scale(Persistence)) %>%
select(-Mouse, -otu)
m <- lm(final_abun ~ ., data = j)
tmp <- summary(m)$coef %>%
as.data.frame() %>%
do(data.frame(var = row.names(.), .)) %>%
rename(SE = Std..Error, p.value = Pr...t..) %>%
filter(var != "(Intercept)") %>%
mutate(var = factor(var, unique(var[order(Estimate)])))
ggplot(tmp, aes(x = var, y = Estimate, color = p.value < 0.05)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = Estimate - SE, ymax = Estimate + SE), width = 0.3) +
geom_point() +
labs(x = '', y = 'Predictors of post-recovery rel. abundance') +
coord_flip() +
th
tmp
j <- x %>%
filter(!is.na(Pair)) %>%
group_by(Pair, otu) %>%
mutate(Control_abun = sum(abun[Abx == 'N']) / length(unique(Hour))) %>%
group_by(Mouse, otu, Control_abun) %>%
summarise(
Initial_abun = abun[Hour == 0],
End_abx_abun = abun[Hour == 120],
final_abun = abun[Hour == max(Hour)],
Persistence = ifelse(abun[Hour == 0] > 0 & abun[Hour == 120] > 0, 1, 0),
Persistence = ifelse(sum(abun[Hour %in% c(0,120)]) == 0, NA, Persistence)) %>%
ungroup() %>%
mutate(Control_abun = scale(log10(Control_abun+1)),
Initial_abun = scale(log10(Initial_abun+1)),
End_abx_bun = scale(log10(End_abx_abun+1)),
Persistence = scale(Persistence)) %>%
select(-Mouse, -otu)
m <- lm(final_abun ~ ., data = j)
tmp <- summary(m)$coef %>%
as.data.frame() %>%
do(data.frame(var = row.names(.), .)) %>%
rename(SE = Std..Error, p.value = Pr...t..) %>%
filter(var != "(Intercept)") %>%
mutate(var = factor(var, unique(var[order(Estimate)])))
ggplot(tmp, aes(x = var, y = Estimate, color = p.value < 0.05)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = Estimate - SE, ymax = Estimate + SE), width = 0.3) +
geom_point() +
labs(x = '', y = 'Predictors of post-recovery rel. abundance') +
coord_flip() +
th
names(traits_wide)
